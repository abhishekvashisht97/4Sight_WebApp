@model AyushmanBharat.Models.ViewModels.CheckListQuestionVM

@{
    ViewBag.Title = "CheckListQuestion";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="content-header">
    <h1>
        CheckList Question
        <small class="text-muted">
            <b class="headerTitle">Protocol -</b> @Model.ProtocolName
            <br /> <b class="headerTitle">Package -</b> @Model.PackageName
        </small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="@Url.Action("Index","Protocol")">Protocol</a></li>
        <li><a href="@Url.Action("Index","Package",new { id = Model.ProtocolID})">Package</a></li>
        <li><a href="@Url.Action("Index","CheckList",new { id = Model.PackageID})">CheckList</a></li>
        <li class="active">Question</li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-body pad">

                    @Html.HiddenFor(model => model.CheckListID)
                    @Html.HiddenFor(model => model.PackageID)
                    @Html.HiddenFor(model => model.IsModifyAllowed)
                    <div class="form-group">
                        <div class="col-md-12">
                            @if (!Model.IsCheckListRevised || Model.IsModifyAllowed)
                            {
                                <a id="btnCreateQuestion" href="@Url.Action("Create", "CheckListQuestion", new { id = Model.CheckListID })" class="btn btn-primary margin-l-m15"><span class="fa fa-plus-square">&nbsp;</span>Add New</a>

                                <a title="Download Template" href="@Url.Action("Download","Document",new { FilePath = "~/Uploads/Template/CheckListQuestion.xlsx" })" class="btn btn-warning" download>
                                    <i class="fa fa-download"></i>
                                    Template
                                </a>
                            }
                            <a class="btn btn-info" href="@Url.Action("Index", "CheckList", new { id = Model.PackageID })"><span> <i class="fa fa-arrow-left" aria-hidden="true"></i></span> Back To CheckList</a>

                            @if (!Model.IsCheckListRevised || Model.IsModifyAllowed)
                            {
                                <div class="pull-right margin-r-m15">
                                    <input id="fileImport" type="file" class="filestyle" data-input="false">

                                    <button type="button" class="btn btn-info " title="Import selected file" id="btnImport" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Processing Import">
                                        <i class="fa fa-upload"></i>
                                        Import
                                    </button>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="clearfix"></div>
                    <hr />

                    <div class="clearfix"></div>
                    <div class="form-group hidden" id="dvError">
                        <p class="d-inline bg-danger"><b>Following rows are not imported.</b></p>
                        <div id="dvTableError"></div>
                        <hr />
                    </div>
                    <div class="form-group table-responsive">
                        <div class="col-md-2 col-md-offset-4 tblBack">

                        </div>
                        <table id="tblCheckListQuestion" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(function () {

        var CheckListID = $("#CheckListID").val();
        var packageID = $("#PackageID").val();
        var status = "view";
        if ($("#btnCreateQuestion").length > 0) {
            status = "modify";
        }
        $('#tblCheckListQuestion').DataTable({
            "lengthMenu": [[10, 25, 50, 100, 1000], [10, 25, 50, 100, 1000]],
            "processing": true, // for show progress bar
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 10,
            "stateSave": true,
            "ajax": {
                "url": "/CheckListQuestion/LoadCheckListQuestion",
                "type": "POST",
                "datatype": "json",
                "data": { packageID: packageID, checkListID: CheckListID, status: status }
            },
            "columnDefs":
                [{
                    "targets": [0, 4],
                    "visible": false,
                    "searchable": false,
                    "orderable": false
                }],
            aaSorting: [[1, 'asc']],
            "columns": [
                       { "data": "CheckListQuestionID", "visible": false, "searchable": false },
                       { title: "Sequence", "data": "Sequence", "autoWidth": true, "className": "text-right" },
                       { title: "Question", "data": "Question", "autoWidth": true },
                       {
                           title: "Expected Answer",
                           "data": "ExpectedAnswer",
                           "autoWidth": true,
                           "render": function (data, type, row, meta) {
                               if (type !== "display") {
                                   return row.ExpectedAnswer;
                               }
                               else {
                                   if (row.ExpectedAnswer == 'Y') {
                                       return '<span class="glyphicon glyphicon-ok text-success"></span>';
                                   }
                                   else {
                                       return '<span class="glyphicon glyphicon-remove text-danger"></span>';
                                   }
                               }
                           }
                       },
                       { "data": "IsCheckListRevised" },
                       {
                           "title": "Defining",
                           "data": "IsDefining",
                           "autoWidth": true,
                           "render": function (data, type, row, meta) {
                               if (type === "display") {
                                   if (row.IsDefining) {
                                       return '<span class="glyphicon glyphicon-ok text-success"></span>';
                                   }
                                   else {
                                       return '<span class="glyphicon glyphicon-remove text-danger"></span>';
                                   }
                               }
                               else {
                                   return row.IsDefining;
                               }
                           }
                       },
                       { title: "Source", "data": "Source", "autoWidth": true },
                       { title: "Report Remark", "data": "ReportRemarks", "autoWidth": true },
                       {
                           "title": "Active",
                           "data": "Active",
                           "autoWidth": true,
                           "render": function (data, type, row, meta) {
                               if (row.Active) {
                                   return '<span class="glyphicon glyphicon-ok text-success"></span>';
                               }
                               else {
                                   return '<span class="glyphicon glyphicon-remove text-danger"></span>';
                               }
                           }
                       },
                    {
                        "title": "Actions",
                        "searchable": false,
                        "sortable": false,
                        "render": function (data, type, row, meta) {
                            var strURL = "";
                            if ($("#btnCreateQuestion").length > 0) {
                                strURL = strURL + '<a href="@Url.Action("Edit", "CheckListQuestion")?id=' + row.CheckListQuestionID + '" title="Edit"><span class="glyphicon glyphicon-pencil"></span></a> | ';
                                strURL = strURL + '<a href="#"  onclick="DeleteCheckListQuestion(\'' + row.CheckListQuestionID + '\',\'' + row.Question + '\');" title="Delete"><span class="glyphicon glyphicon-trash text-danger"></span></a>';
                            }
                            return strURL;
                        }
                    }
            ],
            dom: 'lBfrtip',
            buttons: [
          {
              extend: 'excelHtml5',
              text: ' <i class="fa fa-download"></i> Export To Excel',
              className: 'btn btn-success',
              titleAttr: 'Export to Excel',
              title: 'CheckList Questions List',
              messageTop: 'Excel.',
              exportOptions: {
                  orthogonal: "exportxls",
                  modifier: { page: 'all' },
                  columns: [1, 2, 3, 5]
              },
              init: function (api, node, config) {
                  $(node).removeClass('dt-button buttons-excel buttons-html5');
              },
              footer: true
          }],
        });

        //////////////////Import  Excel///////////////////////////////

        $("#fileImport").change(function () {
            validateExcelFile('fileImport');
        });

        $("#btnImport").click(function () {
            var file = $("#fileImport").val();
            var checklistID = $("#CheckListID").val();
            if (file != "") {
                var excelFile = document.getElementById("fileImport").files[0];
                var formData = new FormData();
                formData.append("file", excelFile);
                formData.append("CheckListID", checklistID);
                var url = '@Url.Action("ImportFromExcel", "CheckListQuestion")';
                ImportExcelFile(url, formData, "tblCheckListQuestion");
            }
            else {
                displayErrorNotification("Please choose file to upload.");
            }
        });
    }); //Ends Document Ready

    function DeleteCheckListQuestion(id, Question) {
        BootstrapDialog.show({
            title: "Confirm Box",
            message: "Are you sure to delete record? " + Question,
            buttons: [{
                label: 'OK',
                cssClass: 'btn-primary',
                icon: "glyphicon glyphicon-check",
                action: function (dialogItself) {
                    $.ajax({
                        url: "@Html.Raw(Url.Action("Delete", "CheckListQuestion"))",
                        type: "GET",
                        data: { CheckListQuestionID: id },
                        dataType: 'json',
                        success: function (response) {
                            if (response == "OK") {
                                //Refresh Ur Table Here
                                $('#tblCheckListQuestion').DataTable().ajax.reload();
                                dialogItself.close();
                                displaySuccessNotification(Question + " Deleted Successfully.");
                            }
                            else if (response == "Conflict") {
                                dialogItself.close();
                                displayErrorNotification("Cannot delete record. Its been used in another masters.");
                            }
                            else {
                                dialogItself.close();
                                displayErrorNotification("Something Went Wrong.");
                            }
                        },
                        error: function (request, status, error) {
                            dialogItself.close();
                            displayErrorNotification("Sorry, An error occured while processing your request.");
                        }
                    });
                }
            },
    {
        label: 'No',
        cssClass: 'btn-warning',
        icon: 'fa fa-times',
        action: function (dialogItself) {
            dialogItself.close();
        }
    }]
        });
    }
</script>
