@model AyushmanBharat.Models.ViewModels.CheckListQuestionVM

@{
    ViewBag.Title = "CheckListQuestion";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var method = "Create";
    if (ViewBag.IsEditPage != null)
    {
        method = "Edit";
    }
}

<section class="content-header">
    <h1>
        CheckList Question
        <small class="text-muted">            
            <b class="headerTitle">Procedure -</b> @Model.ProtocolName
            <br /><b class="headerTitle">Package -</b> @Model.PackageName
        </small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>        
        <li><a href="@Url.Action("Index","Protocol")">Protocol</a></li>
        <li><a href="@Url.Action("Index","Package",new { id = Model.ProtocolID})">Package</a></li>
        <li><a href="@Url.Action("Index","CheckList",new { id = Model.PackageID})">CheckList</a></li>
        <li class="active">Question</li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-body pad">
                    @using (Html.BeginForm(method, "CheckListQuestion", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(m => m.CheckListQuestionID)
                            @Html.HiddenFor(m => m.CheckListID)
                            @Html.HiddenFor(m => m.PackageID)

                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.Question, new { @class = "col-md-3 required" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control", @placeholder = "CheckList Question", @title = "Enter CheckList Question." } })
                                    @Html.ValidationMessageFor(m => m.Question, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ExpectedAnswer, new { @class = "col-md-3 required" })
                                <div class="col-md-9">
                                    @Html.RadioButtonFor(m => m.ExpectedAnswer, 'Y')<span>Yes</span> &nbsp; &nbsp; &nbsp;
                                    @Html.RadioButtonFor(m => m.ExpectedAnswer, 'N')<span>No</span> <br />
                                    @Html.ValidationMessageFor(m => m.ExpectedAnswer, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="clearfix"></div>
                            @*<div class="form-group col-md-6">
                                    @Html.LabelFor(m => m.Weightage, new { @class = "col-md-3 required" })
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(t => t.Weightage, new List<SelectListItem>
                                         {
                                            new SelectListItem{ Text="1", Value = "1" },
                                            new SelectListItem{ Text="2", Value = "2" },
                                            new SelectListItem{ Text="3", Value = "3" },
                                            new SelectListItem{ Text="4", Value = "4" },
                                            new SelectListItem{ Text="5", Value = "5" },
                                         }, htmlAttributes: new { @class = "form-control", @title = "Select Weigtage" })
                                        @Html.ValidationMessageFor(m => m.Weightage, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ReportRemarks, new { @class = "col-md-3 required" })
                                <div class="col-md-9">
                                    @Html.TextAreaFor(model => model.ReportRemarks, new { @class = "form-control", @placeholder = "Report Remark", @title = "Enter Report Remark." })
                                    @Html.ValidationMessageFor(m => m.ReportRemarks, "", new { @class = "text-danger" })
                                </div>
                            </div>                           

                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.Source, new { @class = "col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control", @placeholder = "Source", @title = "Enter Source." } })
                                    @Html.ValidationMessageFor(m => m.Source, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="clearfix"></div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.IsDefining, new { @class = "col-md-3" })
                                <div class="col-md-9">
                                    @Html.CheckBoxFor(model => model.IsDefining, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(m => m.IsDefining, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @if (method == "Edit")
                            {
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.Sequence, htmlAttributes: new { @class = "col-md-3 required" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Sequence, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Sequence, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="clearfix"></div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "col-md-3 required" })
                                    <div class="col-md-9">
                                        @Html.CheckBoxFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }

                            <div class="form-group col-md-12">
                                <center>
                                    @if (method == "Edit")
                                    {
                                        <input type="submit" class="btn btn-success" value="Update" title="Update" />
                                        <input type="reset" class="btn btn-warning" value="Revert" title="Revert" />
                                    }
                                    else
                                    {
                                        <input type="submit" class="btn btn-success" value="Save" title="Save" />
                                        <input type="reset" class="btn btn-warning" value="Cancel" title="Cancel" />
                                    }

                                    <a class="btn btn-info" title="Click to back" href="@Url.Action("Index","CheckListQuestion", new { packageID = Model.PackageID, id= Model.CheckListID, isModifyAllowed = true} )"> Back To List</a>
                                </center>
                            </div>

                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</section>
@*<script>
        $(function () {

            $('#tblCheckListQuestion').dataTable({
                order: [],
                stateSave: true,
                columnDefs: [{ orderable: false, targets: [2] }]
            });
        });
    </script>*@
