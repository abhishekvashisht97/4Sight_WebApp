@model AyushmanBharat.Models.ViewModels.DocumentVM

@{
    ViewBag.Title = "Protocol Document";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        Document
        <small class="text-muted">            
            <b class="headerTitle">Protocol -</b> @Model.ProtocolName
            <br /><b class="headerTitle">Package -</b> @Model.ProcedureName
        </small>        
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="@Url.Action("Index","Protocol")">Protocol</a></li>
        <li><a href="@Url.Action("Index","Package",new { id = Model.ProtocolID})">Package</a></li>
        <li class="active">Document</li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-body pad">
                    @Html.HiddenFor(m => m.PackageID)
                    <div class="form-group">
                        <div class="col-md-12">
                            <a href="@Url.Action("Create","Document",new { id=Model.PackageID})" class="btn btn-primary margin-l-m15"><span class="fa fa-plus-square">&nbsp;</span>Add New</a>

                            <a class="btn btn-info" title="Back to package" href="@Url.Action("Index","Package",new {id = Model.ProtocolID })"><span> <i class="fa fa-arrow-left" aria-hidden="true"></i></span> Back To Package</a>

                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <hr />

                    <div class="form-group table-responsive">

                        <table id="tblDocument" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(function () {
        var packageID = $("#PackageID").val();
        $('#tblDocument').DataTable({
            "lengthMenu": [[10, 25, 50, 100, 1000], [10, 25, 50, 100, 1000]],
            "processing": true, // for show progress bar
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 10,
            "stateSave": true,
            "ajax": {
                "url": "/Document/LoadDocument",
                "type": "POST",
                "datatype": "json",
                "data": { packageID: packageID }
            },
            "columnDefs":
                [{
                    "targets": [0, 2],
                    "visible": false,
                    "searchable": false,
                    "orderable": false
                }],
            aaSorting: [[1, 'asc']],
            "columns": [
                      { "data": "DocumentID", "visible": false, "searchable": false },
                      { title: "Name", "data": "NameOfDocument", "autoWidth": true },
                      { "data": "ProcedureName", "autoWidth": true },
                      { title: "Type", "data": "DocumentType", "autoWidth": true },
                      {
                          title: "File",
                          "data": "FilePath",
                          "searchable": false,
                          "sortable": false,
                          "render": function (data, type, row, meta) {
                              if (row.FilePath != null && row.FilePath != "") {
                                  return '<a href="@Url.Action("Download", "Document")?FilePath=' + row.FilePath + '" class="btn btn-datatable btn-success"><i class="fa fa-download"></i> Download</a>';
                              }
                              else {
                                  return '<a href="#" class="btn btn-datatable btn-danger" disabled><i class="fa fa-ban"></i> File Not Found</a>';
                              }
                          }
                      },
                    {
                        title: "Actions",
                        "data": "Id",
                        "searchable": false,
                        "sortable": false,
                        "render": function (data, type, row, meta) {
                            var strURL = '<a href="@Url.Action("Edit", "Document")?id=' + row.DocumentID + '" title="Edit"><span class="glyphicon glyphicon-pencil"></span></a> | ';
                            strURL = strURL + '<a href="#"  onclick="Delete(\'' + row.DocumentID + '\',\'' + row.NameOfDocument + '\');" title="Delete"><span class="glyphicon glyphicon-trash text-danger"></span></a>';

                            return strURL;
                        }
                    }
            ],
            dom: 'lBfrtip',
            buttons: [
          {
              extend: 'excelHtml5',
              text: ' <i class="fa fa-download"></i> Export To Excel',
              className: 'btn btn-success',
              titleAttr: 'Export to Excel',
              title: 'Documents List',
              messageTop: 'Excel.',
              exportOptions: {
                  modifier: {

                      page: 'all',
                      //search: 'none'
                  },
                  columns: [1, 2, 3]
              },
              init: function (api, node, config) {
                  $(node).removeClass('dt-button buttons-excel buttons-html5');
              },
              footer: true
          }],
        });
    });

    function Delete(id, NameOfDocument) {
        BootstrapDialog.show({
            title: "Confirm Box",
            message: "Are you sure to delete record? " + NameOfDocument,
            buttons: [{
                label: 'OK',
                cssClass: 'btn-primary',
                icon: "glyphicon glyphicon-check",
                action: function (dialogItself) {
                    $.ajax({
                        url: "@Html.Raw(Url.Action("Delete", "Document"))",
                        type: "GET",
                        data: { DocumentID: id },
                        dataType: 'json',
                        success: function (response) {
                            if (response == "OK") {
                                //Refresh Ur Table Here
                                $('#tblDocument').DataTable().ajax.reload();
                                dialogItself.close();
                                displaySuccessNotification(ProcedureName + " Deleted Successfully.");
                            }
                            else if (response == "Conflict") {
                                dialogItself.close();
                                displayErrorNotification("Cannot delete record. Its been used in another masters.");
                            }
                            else {
                                dialogItself.close();
                                displayErrorNotification("Something Went Wrong!");
                            }
                        },
                        error: function (request, status, error) {
                            dialogItself.close();
                            displayErrorNotification("Sorry, An error occured while processing your request.");
                        }
                    });
                }
            },
    {
        label: 'No',
        cssClass: 'btn-warning',
        icon: 'fa fa-times',
        action: function (dialogItself) {
            dialogItself.close();
        }
    }]
        });
    }
</script>

