@model AyushmanBharat.Models.ViewModels.CheckListVM

@{
    ViewBag.Title = "CheckList";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var method = "Create";
    if (ViewBag.IsEditPage != null)
    {
        method = "Edit";
    }
}


<section class="content-header">
    <h1>
        CheckList
        <small class="text-muted">
            <b class="headerTitle">Procedure -</b> @Model.ProcedureName
            <br /><b class="headerTitle">Package -</b> @Model.PackageName           
        </small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>        
        <li><a href="@Url.Action("Index","Protocol")">Protocol</a></li>
        <li><a href="@Url.Action("Index","Package",new { id = Model.ProtocolID})">Package</a></li>
        <li class="active">CheckList</li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-body pad">
                    @using (Html.BeginForm(method, "CheckList", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(m => m.CheckListID)
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.PackageID, "Package", new { @class = "col-md-3 required" })
                                <div class="col-md-9">
                                    @if (ViewBag.PackageID != null)
                                    {
                                        @Html.DropDownListFor(t => t.PackageID, null, "--Select--", htmlAttributes: new { @class = "form-control", @title = "Select Package" })
                                        @Html.ValidationMessageFor(model => model.PackageID, "", new { @class = "text-danger" })
                                    }
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.StartDate, new { @class = "col-md-3 required" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.StartDate, new
                               {
                                   htmlAttributes = new
                                   {
                                       @class = "form-control",
                                       //Value = Model.StartDate != null ? Model.StartDate.Date.ToString("yyyy-MM-dd") : null,
                                       @placeholder = "Start Date",
                                       @title = "Enter Start Date."
                                   }
                               })
                                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="clearfix"></div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.EndDate, new { @class = "col-md-3 required" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.EndDate, new
                               {
                                   htmlAttributes = new
                                   {
                                       @class = "form-control",
                                       //Value = Model.EndDate != null ? Model.EndDate.Date.ToString("yyyy-MM-dd") : null,
                                       @placeholder = "End Date",
                                       @title = "Enter End Date."
                                   }
                               })
                                    @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.Remarks, new { @class = "col-md-3 required" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @placeholder = "Remarks", @title = "Enter Remarks." } })
                                    @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <center>
                                    @if (method == "Edit")
                                    {
                                        <input type="submit" class="btn btn-success" value="Update" title="Update" />
                                        <input type="reset" class="btn btn-warning" value="Revert" title="Revert" />
                                    }
                                    else
                                    {
                                        <input type="submit" class="btn btn-success" value="Save" title="Save" />
                                        <input type="reset" class="btn btn-warning" value="Clear" title="Clear" />
                                    }

                                    <a class="btn btn-info" title="Click to back" href="@Url.Action("Index", "CheckList", new { id = Model.PackageID })"> Back To List</a>
                                </center>
                            </div>

                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</section>
<script>
    $(function () {

        $('#tblCheckList').dataTable({
            order: [],
            stateSave: true,
            columnDefs: [{ orderable: false, targets: [2] }]
        });
    });
</script>
