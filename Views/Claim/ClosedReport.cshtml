@model AyushmanBharat.Models.ViewModels.ClaimVM
@using AyushmanBharat.Common
@{
    ViewBag.Title = "Claim Report";
}

<section class="content-header">
    <h1>
        Claim Report
    </h1>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">

            <div class="box box-primary">
                <div class="box-body pad">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.BatchID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.BatchID, Model.BatchList, "--Select Batch--", new { @id = "ddlBatch", @class = "form-control" })
                            <span id="spnBatch" class="text-danger"></span>
                        </div>

                        @Html.Label("Auditor Status", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.AuditorFinalStatus, Model.AuditorFinalStatusList, "--Select Auditor Status--", new { @id = "ddlAuditorStatus", @class = "form-control" })
                        </div>
                    </div>

                    <div class="clearfix"></div>
                    <hr />
                    <div class="clearfix"></div>
                    <div class="form-group table-responsive">
                        <table id="tblClaimReport" class="table table-striped  table-responsive table-bordered dt-responsive nowrap" cellspacing="0"></table>
                        <div class="clearfix"></div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(function () {

        GetClaimByBatchIdAndAuditStatus($("#ddlBatch").val(), $("#ddlAuditorStatus").val());

        $("#ddlBatch").change(function () {
            var batchID = $('#ddlBatch :selected').val();
            $('#tblClaimReport').dataTable().fnDestroy();
            if (batchID !== "") {
                $("#ddlBatch").css('border-color', '#d2d6de');
                $("#spnBatch").text("");
                GetClaimByBatchIdAndAuditStatus($('#ddlBatch :selected').val(), $('#ddlAuditorStatus :selected').val());
            }
        });

        $("#ddlAuditorStatus").change(function () {
            var batchID = $('#ddlBatch :selected').val();
            if (batchID == "") {
                $("#ddlBatch").css('border-color', 'red');
                $("#spnBatch").text("Select Batch.");
            }
            else {
                $('#tblClaimReport').dataTable().fnDestroy();
                GetClaimByBatchIdAndAuditStatus($('#ddlBatch :selected').val(), $('#ddlAuditorStatus :selected').val());
            }
        });

    });

    function GetClaimByBatchIdAndAuditStatus(batchId, auditStatus) {

        var rows_selected = [];

        var table = $('#tblClaimReport').DataTable({
            "lengthMenu": [[10, 25, 50, 100, 1000], [10, 25, 50, 100, 1000]],
            "processing": true, // for show progress bar
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 10,
            "stateSave": true,
            "ajax": {
                "url": "/Claim/LoadClosedReport",
                "type": "POST",
                "datatype": "json",
                "data": { 'batchID': batchId, 'auditStatus': auditStatus },
            },
            aaSorting: [[3, 'desc']],
            //'select': 'multi',

            "columns": [
            { "title": "ClaimID", "data": "ClaimID", "visible": false, "searchable": false },
            { "title": "BatchID", "data": "BatchID", "visible": false, "searchable": false },
             { "title": "BatchName", "data": "BatchName", "visible": false, "searchable": false },
            { "title": "Flagging Score", "data": "FlaggingScore", "autoWidth": true },
            { "title": "Case Number", "data": "CaseNumber", "autoWidth": true },
            { "title": "Patient", "data": "PatientName", "autoWidth": true },
            { "title": "Speciality", "data": "Speciality", "autoWidth": true },
            { "title": "Hospital", "data": "HospitalName", "autoWidth": true },
            { "title": "Procedure", "data": "ProcedureName", "autoWidth": true },
            { "title": "Procedure Code", "data": "ProcedureCode", "autoWidth": true },
            { "title": "Beneficiary Code", "data": "BeneficiaryCode", "visible": false, "searchable": false },
            { "title": "Family Code", "data": "FamilyCode", "visible": false, "searchable": false },
            { "title": "Patient Name", "data": "PatientName", "visible": false, "searchable": false },
            { "title": "Age", "data": "Age", "visible": false, "searchable": false },
            { "title": "Gender", "data": "Gender", "visible": false, "searchable": false },
            { "title": "Patients Home District", "data": "PatientsHomeDistrict", "visible": false, "searchable": false },
            { "title": "Patients Home State", "data": "PatientsHomeState", "visible": false, "searchable": false },
            { "title": "Patients Contact Number", "data": "PatientsContactNumber", "visible": false, "searchable": false },
            { "title": "PatientIPOrOP", "data": "PatientIPOrOP", "visible": false, "searchable": false },
            { "title": "MedicalOrSurgery", "data": "MedicalOrSurgery", "visible": false, "searchable": false },
             {
                 "title": "IP Registration Date", "data": "IPRegistrationDate", "autoWidth": true, "visible": false, "searchable": false,
                 "render": function (data, type, row, meta) {
                     return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                 }
             },
            { "title": "Hospital Code", "data": "HospitalCode", "visible": false, "searchable": false },
            { "title": "Hospital Type", "data": "HospitalType", "visible": false, "searchable": false },
            { "title": "Hospital Application Status", "data": "HospitalApplicationStatus", "visible": false, "searchable": false },
            { "title": "Hospital District", "data": "HospitalDistrict", "visible": false, "searchable": false },
            { "title": "Hospital State", "data": "HospitalState", "visible": false, "searchable": false },
             {
                 "title": "Admission Date", "data": "AdmissionDate", "autoWidth": true, "visible": false, "searchable": false,
                 "render": function (data, type, row, meta) {
                     return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                 }
             },
             {
                 "title": "Pre Auth Initiation Date", "data": "PreAuthInitiationDate", "autoWidth": true, "visible": false, "searchable": false,
                 "render": function (data, type, row, meta) {
                     return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                 }
             },
            { "title": "Pre Auth Initiation Amount", "data": "PreAuthInitiationAmount", "visible": false, "searchable": false },
             {
                 "title": "Pre Auth Cancel Date", "data": "PreAuthCancelDate", "autoWidth": true, "visible": false, "searchable": false,
                 "render": function (data, type, row, meta) {
                     return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                 }
             },
              {
                  "title": "Pre Auth Approval Date", "data": "PreAuthApprovalDate", "autoWidth": true, "visible": false, "searchable": false,
                  "render": function (data, type, row, meta) {
                      return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                  }
              },
            { "title": "Pre Auth Approval Amount", "data": "PreAuthApprovalAmount", "visible": false, "searchable": false },
             {
                 "title": "PreAuthRejectionDate", "data": "PreAuthRejectionDate", "autoWidth": true, "visible": false, "searchable": false,
                 "render": function (data, type, row, meta) {
                     return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                 }
             },
            { "title": "Enhancement Flag", "data": "EnhancementFlag", "visible": false, "searchable": false },
            { "title": "Enhancement Approved Amount", "data": "EnhancementApprovedAmount", "visible": false, "searchable": false },
            {
                "title": "SurgeryDate", "data": "SurgeryDate", "autoWidth": true, "visible": false, "searchable": false,
                "render": function (data, type, row, meta) {
                    return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                }
            },

               {
                   "title": "DischargeDate", "data": "DischargeDate", "autoWidth": true, "visible": false, "searchable": false,
                   "render": function (data, type, row, meta) {
                       return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                   }
               },
                  {
                      "title": "EnhancementApprovedAmount", "data": "EnhancementApprovedAmount", "autoWidth": true, "visible": false, "searchable": false,
                      "render": function (data, type, row, meta) {
                          return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                      }
                  },
                     {
                         "title": "ClaimRaisedDate", "data": "ClaimRaisedDate", "autoWidth": true, "visible": false, "searchable": false,
                         "render": function (data, type, row, meta) {
                             return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                         }
                     },
            {
                "title": "Claim Amount(&#x20b9;)", "data": "", "searchable": true, "autoWidth": true, "className": "text-right",
                "render": function (data, type, row, meta) {
                    return "&#x20b9;" + row.ClaimAmount;
                }
            },


               {
                   "title": "Claim Paid Date", "data": "ClaimPaidDate", "autoWidth": true, "visible": false, "searchable": false,
                   "render": function (data, type, row, meta) {
                       return (moment(data).isValid()) ? moment(data).format('DD-MMM-YYYY hh:mm A') : "";
                   }
               },
            { "title": "Claim UTR Number", "data": "ClaimUTRNumber", "visible": false, "searchable": false },
            { "title": "Max Of Index", "data": "MaxOfIndex", "visible": false, "searchable": false },
            { "title": "Claim Status", "data": "ClaimStatus", "visible": false, "searchable": false },
            { "title": "Final Status", "data": "FinalStatus", "visible": false, "searchable": false },
            { "title": "Upload Status", "data": "UploadStatus", "visible": false, "searchable": false },
            { "title": "Invalid Upload Due To", "data": "ErrorMessage", "visible": false, "searchable": false },
            { "title": "Auditor", "data": "AuditorName", "autoWidth": true },
            //{ "title": "Audit Status", "data": "AuditStatus", "visible": false, "searchable": false },
            //{ "title": "AuditorUserID", "data": "AuditorUserID", "visible": false, "searchable": false },
            { "title": "Auditor Status", "data": "AuditorFinalStatus" },
            { "title": "Auditor Remark", "data": "AuditorRemark", "visible": false, "searchable": false },
            { "title": "QC", "data": "QCName", "autoWidth": true },
            {
                "title": "Audit Status",
                "data": "AuditStatus",
                "autoWidth": true,
                "render": function (data, type, row, meta) {
                    return data;
                    @*if (type !== "display") {
                        return data;
                }
                else {
                    if (row.AuditStatus == '@AuditStatusEnum.Closed.ToString()') {
                        return '<span class="glyphicon glyphicon-ok text-success"></span>';
                    }
                    else {
                        return '<span class="glyphicon glyphicon-remove text-danger"></span>';
                    }
                }*@
                }
            },
            { "title": "QC Remark", "data": "QCRemark", "visible": false, "searchable": false },
            {
                "title": "Action",
                "searchable": false,
                "sortable": false,
                "render": function (data, type, row, meta) {
                    var strURL = '';
                    strURL = strURL + '<a href="@Url.Action("Detail", "Claim")?id=' + row.ClaimID + '&&pageType=@PageTypeEnum.Report.ToString()" class ="btn btn-datatable btn-danger" title="Details"><span class="glyphicon glyphicon-eye-open"></span> Details</a>';
                    return strURL;
                }
            }
            ],
            dom: 'lBfrtip',

            buttons: [
   {
       extend: 'excelHtml5',
       text: ' <i class="fa fa-download"></i> Export To Excel',
       className: 'btn btn-success',
       titleAttr: 'Export to Excel',
       title: 'Closed Claims Report',
       messageTop: 'Excel.',
       exportOptions: {
           modifier: { page: 'all', },
           columns: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
               30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]
       },
       init: function (api, node, config) {
           $(node).removeClass('dt-button buttons-excel buttons-html5');
       },
       footer: true
   },
            //{
            //    extend: 'pdfHtml5',
            //    orientation: 'landscape',
            //    pageSize: 'A0',//A0 is the largest A5 smallest(A0,A1,A2,A3,legal,A4,A5,letter))
            //    exportOptions: {
            //        columns: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            //   30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]
            //    }
            //    //customize: function (doc) {
            //    //    doc.defaultStyle.fontSize = 1; //2,3,4,etc
            //    //    doc.styles.tableHeader.fontSize = 1; //2, 3, 4, etc
            //    //}
            //}
            ],
        });


        var table = $('#tblClaimReportWithFlaggingRule').DataTable({
            "lengthMenu": [[10, 25, 50, 100, 1000], [10, 25, 50, 100, 1000]],
            "processing": true, // for show progress bar
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 10,
            "stateSave": true,
            "ajax": {
                "url": "/Claim/LoadClosedReportWithFlaggingRule",
                "type": "POST",
                "datatype": "json",
                "data": { 'batchID': batchId, 'auditStatus': auditStatus },
            },
            aaSorting: [[0, 'desc']],
            //'select': 'multi',
            "columns": [
                  { "title": "Case Number", "data": "CaseNumber", "autoWidth": true },
            ],
            dom: 'lBfrtip',
            buttons: [
   {
       extend: 'excelHtml5',
       text: ' <i class="fa fa-download"></i> Export To Excel',
       className: 'btn btn-success',
       titleAttr: 'Export to Excel',
       title: 'Closed Claims Report',
       messageTop: 'Excel.',
       exportOptions: {
           modifier: { page: 'all', },
       },
       init: function (api, node, config) {
           $(node).removeClass('dt-button buttons-excel buttons-html5');
       },
       footer: true
   },
            ],
        });
        /////////////////////Ends Table///////////////////////////
    }
    ////////////ENDS GetClaimByBatchIdAndAuditStatus()  /////////////////////////////////////
</script>
