@model AyushmanBharat.Models.ViewModels.BeneficiaryVM

@{
    ViewBag.Title = "Beneficiary";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="content-header">
    <h1>
        Policy Holder
    </h1>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-body pad">

                    <div class="form-group">
                        <div class="col-md-12">
                            <a href="@Url.Action("Create","Beneficiary")" class="btn btn-primary margin-l-m15"><span class="fa fa-plus-square">&nbsp;</span>Add New</a>

                            <a href="@Url.Action("Download","Document",new { FilePath = "~/Uploads/Template/BeneficiaryTemplate.xlsx" })" class="btn btn-warning"  title="Download Template" download>
                                <i class="fa fa-download"></i>
                                Template
                            </a>

                            <div class="pull-right margin-r-m15">
                                <input id="fileImport" type="file" class="filestyle" data-input="false">

                                <button type="button" class="btn btn-info" title="Import selected file" id="btnImport" data-loading-text="<i class='fa fa-spinner fa-spin'></i> Processing Import">
                                    <i class="fa fa-upload"></i>
                                    Import
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <hr />

                    <div class="clearfix"></div>
                    <div class="form-group hidden" id="dvError">
                        <p class="d-inline bg-danger"><b>Following rows are not imported.</b></p>  
                        <div id="dvTableError"></div>                     
                        <hr />
                    </div>

                    <div class="form-group table-responsive">
                        <table id="tblBeneficiary" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Beneficiary ID</th>
                                    <th>Name</th>
                                    <th>Gender</th>
                                    <th>Age</th>
                                    <th>Insurance Validity Date</th>
                                    <th>Renewal Code</th>
                                    <th>Renewal ID</th>
                                    <th>Policy Holder Code</th>
                                    <th>Family Code</th>
                                    <th>Insurance Company Name</th>
                                    <th>Contac tNo</th>
                                    <th>Landline Number</th>
                                    <th>State</th>
                                    <th>District</th>
                                    <th>Block Name</th>
                                    <th>Location Name</th>
                                    <th>Locality</th>
                                    <th>Landmark</th>
                                    <th>Pin Code</th>
                                    <th>Policy Holder Address</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(function () {

        $('#tblBeneficiary').DataTable({
            "lengthMenu": [[10, 25, 50, 100, 1000], [10, 25, 50, 100, 1000]],
            "processing": true, // for show progress bar
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 10,
            "stateSave": true,
            "ajax": {
                "url": "/Beneficiary/LoadBeneficiary",
                "type": "POST",
                "datatype": "json",
            },
            "columnDefs":
                [{
                    "targets": [0, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17,18,19],
                    "visible": false,
                    "searchable": false,
                    "orderable": false
                }],
            aaSorting: [[1, 'asc']],
            "columns": [
                      { "data": "BeneficiaryID", "visible": false, "searchable": false },
                      { "data": "BeneficiaryName", "autoWidth": true },
                       { "data": "BeneficiaryGender", "autoWidth": true },
                        { "data": "BeneficiaryAge", "autoWidth": true },
                         { "data": "InsuranceValidityDateString", "autoWidth": true },
                         { "data": "BeneficiaryRenewalCode", "autoWidth": true },
                          { "data": "BeneficiaryRenewalID", "autoWidth": true },
                      { "data": "BeneficiaryCode", "autoWidth": true },
                       { "data": "BeneficiaryFamilyCode", "autoWidth": true },
                        { "data": "InsuranceCompanyName", "autoWidth": true },
                         { "data": "BeneficiaryContactNo", "autoWidth": true },
                             { "data": "BeneficiaryLandlineNumber", "autoWidth": true },
                              { "data": "StateName", "autoWidth": true },
                                { "data": "DistrictName", "autoWidth": true },
                                  { "data": "BlockName", "autoWidth": true },
                       { "data": "TalukaName", "autoWidth": true },
                        { "data": "BeneficiaryLocality", "autoWidth": true },
                               { "data": "BeneficiaryLandmark", "autoWidth": true },
                         { "data": "PinCode", "autoWidth": true, "className": "text-right" },
                               { "data": "BeneficiaryAddress", "autoWidth": true },
                    {
                        "data": "Id",
                        "searchable": false,
                        "sortable": false,
                        "render": function (data, type, row, meta) {
                            var strURL = '<a href="@Url.Action("Edit", "Beneficiary")?id=' + row.BeneficiaryID + '"><span class="glyphicon glyphicon-pencil"></span></a> | ';
                            strURL = strURL + '<a href="@Url.Action("Details", "Beneficiary")?id=' + row.BeneficiaryID + '","' + row.BeneficiaryCode + '" title="Details"><span class="glyphicon glyphicon-eye-open text-success"></span></a> |';
                            strURL = strURL + '<a href="#"  onclick="DeleteBeneficiary(\'' + row.BeneficiaryID + '\',\'' + row.BeneficiaryName + '\');" ><span class="glyphicon glyphicon-trash text-danger"></span></a>';

                            return strURL;
                        }
                    }
            ],
            dom: 'lBfrtip',
            buttons: [
          {
              extend: 'excelHtml5',
              text: ' <i class="fa fa-download"></i> Export To Excel',
              className: 'btn btn-success',
              titleAttr: 'Export to Excel',
              title: 'Policy Holder List',
              messageTop: 'Excel.',
              exportOptions: {
                  modifier: {

                      page: 'all',
                      //search: 'none'
                  },
                  columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,18,19]
              },
              init: function (api, node, config) {
                  $(node).removeClass('dt-button buttons-excel buttons-html5');                 
              },
              footer: true
          }],
        });


        //////////////////Import  Excel///////////////////////////////

        $("#fileImport").change(function () {
            validateExcelFile('fileImport');
        });

        @*$("#btnImport").click(function () {
            var excelFile = document.getElementById("fileImport").files[0];
            var formData = new FormData();
            formData.append("file", excelFile);
            var url = '@Url.Action("ImportFromExcel", "Beneficiary")';
            ImportExcelFile(url, formData, "tblBeneficiary");
        });*@
        $("#btnImport").click(function () {
            var file = $("#fileImport").val();
            if (file != "") {
                var excelFile = document.getElementById("fileImport").files[0];
                var formData = new FormData();
                formData.append("file", excelFile);
                var url = '@Url.Action("ImportFromExcel", "Beneficiary")';
                ImportExcelFile(url, formData, "tblBeneficiary");
            }
            else {
                displayErrorNotification("Please choose file to upload.");
            }
        });

        ///////////////////////////////////////////////////////////////////////////
    });




    function DeleteBeneficiary(id, BeneficiaryName) {

        BootstrapDialog.show({
            title: "Confirm Box",
            message: "Are you sure to delete record? " + BeneficiaryName,
            buttons: [{
                label: 'OK',
                cssClass: 'btn-primary',
                icon: "glyphicon glyphicon-check",
                action: function (dialogItself) {
                    $.ajax({
                        url: "@Html.Raw(Url.Action("Delete", "Beneficiary"))",
                        type: "GET",
                        data: { BeneficiaryID: id },
                        dataType: 'json',
                        success: function (response) {
                            if (response == "OK") {
                                //Refresh Ur Table Here
                                $('#tblBeneficiary').DataTable().ajax.reload();
                                dialogItself.close();
                                displaySuccessNotification(BeneficiaryName + " Deleted Successfully.");
                            }
                            else if (response == "Conflict") {
                                dialogItself.close();
                                displayErrorNotification("Cannot delete record. Its been used in another masters.");
                            }
                            else {
                                dialogItself.close();
                                displayErrorNotification("Something Went Wrong!");
                            }
                        },
                        error: function (request, status, error) {
                            dialogItself.close();
                            displayErrorNotification("Sorry, An error occured while processing your request.");
                        }
                    });
                }
            },
    {
        label: 'No',
        cssClass: 'btn-warning',
        icon: 'fa fa-times',
        action: function (dialogItself) {
            dialogItself.close();
        }
    }]
        });
    }
</script>


